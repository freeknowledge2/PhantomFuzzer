#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Vulnerability analysis module for PhantomFuzzer.

This module provides a centralized system for vulnerability analysis,
classification, severity assessment, and reporting. It integrates with
the scanner, fuzzer, and payload modules to provide a comprehensive
vulnerability management system.
"""

from typing import Dict, List, Any, Optional, Union, Set, Tuple

# Vulnerability severity levels
# These match the levels in scanner/base.py for consistency
SEVERITY_CRITICAL = 'critical'
SEVERITY_HIGH = 'high'
SEVERITY_MEDIUM = 'medium'
SEVERITY_LOW = 'low'
SEVERITY_INFO = 'info'

# Vulnerability categories (OWASP Top 10 2021)
CATEGORY_BROKEN_ACCESS_CONTROL = 'A01:2021-Broken Access Control'
CATEGORY_CRYPTO_FAILURES = 'A02:2021-Cryptographic Failures'
CATEGORY_INJECTION = 'A03:2021-Injection'
CATEGORY_INSECURE_DESIGN = 'A04:2021-Insecure Design'
CATEGORY_SECURITY_MISCONFIG = 'A05:2021-Security Misconfiguration'
CATEGORY_VULNERABLE_COMPONENTS = 'A06:2021-Vulnerable and Outdated Components'
CATEGORY_AUTH_FAILURES = 'A07:2021-Identification and Authentication Failures'
CATEGORY_SOFTWARE_DATA_INTEGRITY = 'A08:2021-Software and Data Integrity Failures'
CATEGORY_LOGGING_MONITORING = 'A09:2021-Security Logging and Monitoring Failures'
CATEGORY_SSRF = 'A10:2021-Server-Side Request Forgery'

# Consolidated vulnerability types from all scanners
# File-related vulnerabilities
VULN_MALWARE_SIGNATURE = 'Malware Signature'
VULN_SENSITIVE_INFO = 'Sensitive Information'
VULN_CODE_VULNERABILITY = 'Code Vulnerability'
VULN_INSECURE_PERMISSION = 'Insecure File Permission'
VULN_SUSPICIOUS_EXTENSION = 'Suspicious File Extension'

# API-related vulnerabilities
VULN_INJECTION = 'API Injection'
VULN_BROKEN_AUTH = 'Broken Authentication'
VULN_BROKEN_OBJECT_AUTH = 'Broken Object Level Authorization'
VULN_EXCESSIVE_DATA = 'Excessive Data Exposure'
VULN_RATE_LIMIT = 'Lack of Rate Limiting'
VULN_MASS_ASSIGNMENT = 'Mass Assignment'
VULN_SECURITY_MISCONFIG = 'Security Misconfiguration'

# ML-specific vulnerabilities
VULN_ML_ANOMALY = 'ML-Detected Anomaly'
VULN_PATTERN_MATCH = 'Suspicious Pattern Match'

# Web-specific vulnerabilities
VULN_XSS = 'Cross-Site Scripting'
VULN_CSRF = 'Cross-Site Request Forgery'
VULN_SQL_INJECTION = 'SQL Injection'
VULN_COMMAND_INJECTION = 'Command Injection'
VULN_PATH_TRAVERSAL = 'Path Traversal'
VULN_OPEN_REDIRECT = 'Open Redirect'
VULN_INSECURE_DESERIALIZATION = 'Insecure Deserialization'
VULN_XML_EXTERNAL_ENTITY = 'XML External Entity'

# Import analyzer, classifier, severity, and reporter modules
# These will be implemented in their respective files
try:
    from phantomfuzzer.vulnerability.analyzer import VulnerabilityAnalyzer
    from phantomfuzzer.vulnerability.classifier import VulnerabilityClassifier
    from phantomfuzzer.vulnerability.severity import SeverityAssessor
    from phantomfuzzer.vulnerability.reporter import VulnerabilityReporter
    
    # Define the Vulnerability class for representing vulnerabilities
    from phantomfuzzer.vulnerability.analyzer import Vulnerability
    
    __all__ = [
        # Classes
        'VulnerabilityAnalyzer',
        'VulnerabilityClassifier',
        'SeverityAssessor',
        'VulnerabilityReporter',
        'Vulnerability',
        
        # Severity levels
        'SEVERITY_CRITICAL',
        'SEVERITY_HIGH',
        'SEVERITY_MEDIUM',
        'SEVERITY_LOW',
        'SEVERITY_INFO',
        
        # Categories
        'CATEGORY_BROKEN_ACCESS_CONTROL',
        'CATEGORY_CRYPTO_FAILURES',
        'CATEGORY_INJECTION',
        'CATEGORY_INSECURE_DESIGN',
        'CATEGORY_SECURITY_MISCONFIG',
        'CATEGORY_VULNERABLE_COMPONENTS',
        'CATEGORY_AUTH_FAILURES',
        'CATEGORY_SOFTWARE_DATA_INTEGRITY',
        'CATEGORY_LOGGING_MONITORING',
        'CATEGORY_SSRF',
        
        # Vulnerability types
        'VULN_MALWARE_SIGNATURE',
        'VULN_SENSITIVE_INFO',
        'VULN_CODE_VULNERABILITY',
        'VULN_INSECURE_PERMISSION',
        'VULN_SUSPICIOUS_EXTENSION',
        'VULN_INJECTION',
        'VULN_BROKEN_AUTH',
        'VULN_BROKEN_OBJECT_AUTH',
        'VULN_EXCESSIVE_DATA',
        'VULN_RATE_LIMIT',
        'VULN_MASS_ASSIGNMENT',
        'VULN_SECURITY_MISCONFIG',
        'VULN_ML_ANOMALY',
        'VULN_PATTERN_MATCH',
        'VULN_XSS',
        'VULN_CSRF',
        'VULN_SQL_INJECTION',
        'VULN_COMMAND_INJECTION',
        'VULN_PATH_TRAVERSAL',
        'VULN_OPEN_REDIRECT',
        'VULN_INSECURE_DESERIALIZATION',
        'VULN_XML_EXTERNAL_ENTITY'
    ]
except ImportError:
    # This allows the module to be imported even if the implementation files
    # haven't been created yet
    pass